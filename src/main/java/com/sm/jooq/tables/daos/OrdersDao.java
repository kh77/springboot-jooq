/*
 * This file is generated by jOOQ.
 */
package com.sm.jooq.tables.daos;


import com.sm.jooq.tables.Orders;
import com.sm.jooq.tables.records.OrdersRecord;

import java.util.List;

import org.jooq.Configuration;
import org.jooq.impl.DAOImpl;
import org.springframework.beans.factory.annotation.Autowired;
import org.springframework.stereotype.Repository;


/**
 * This class is generated by jOOQ.
 */
@SuppressWarnings({ "all", "unchecked", "rawtypes" })
@Repository
public class OrdersDao extends DAOImpl<OrdersRecord, com.sm.jooq.tables.pojos.Orders, Long> {

    /**
     * Create a new OrdersDao without any configuration
     */
    public OrdersDao() {
        super(Orders.ORDERS, com.sm.jooq.tables.pojos.Orders.class);
    }

    /**
     * Create a new OrdersDao with an attached configuration
     */
    @Autowired
    public OrdersDao(Configuration configuration) {
        super(Orders.ORDERS, com.sm.jooq.tables.pojos.Orders.class, configuration);
    }

    @Override
    public Long getId(com.sm.jooq.tables.pojos.Orders object) {
        return object.getId();
    }

    /**
     * Fetch records that have <code>id BETWEEN lowerInclusive AND upperInclusive</code>
     */
    public List<com.sm.jooq.tables.pojos.Orders> fetchRangeOfId(Long lowerInclusive, Long upperInclusive) {
        return fetchRange(Orders.ORDERS.ID, lowerInclusive, upperInclusive);
    }

    /**
     * Fetch records that have <code>id IN (values)</code>
     */
    public List<com.sm.jooq.tables.pojos.Orders> fetchById(Long... values) {
        return fetch(Orders.ORDERS.ID, values);
    }

    /**
     * Fetch a unique record that has <code>id = value</code>
     */
    public com.sm.jooq.tables.pojos.Orders fetchOneById(Long value) {
        return fetchOne(Orders.ORDERS.ID, value);
    }

    /**
     * Fetch records that have <code>product_id BETWEEN lowerInclusive AND upperInclusive</code>
     */
    public List<com.sm.jooq.tables.pojos.Orders> fetchRangeOfProductId(Long lowerInclusive, Long upperInclusive) {
        return fetchRange(Orders.ORDERS.PRODUCT_ID, lowerInclusive, upperInclusive);
    }

    /**
     * Fetch records that have <code>product_id IN (values)</code>
     */
    public List<com.sm.jooq.tables.pojos.Orders> fetchByProductId(Long... values) {
        return fetch(Orders.ORDERS.PRODUCT_ID, values);
    }

    /**
     * Fetch records that have <code>description BETWEEN lowerInclusive AND upperInclusive</code>
     */
    public List<com.sm.jooq.tables.pojos.Orders> fetchRangeOfDescription(String lowerInclusive, String upperInclusive) {
        return fetchRange(Orders.ORDERS.DESCRIPTION, lowerInclusive, upperInclusive);
    }

    /**
     * Fetch records that have <code>description IN (values)</code>
     */
    public List<com.sm.jooq.tables.pojos.Orders> fetchByDescription(String... values) {
        return fetch(Orders.ORDERS.DESCRIPTION, values);
    }
}
