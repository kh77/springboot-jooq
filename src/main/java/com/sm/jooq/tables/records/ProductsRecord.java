/*
 * This file is generated by jOOQ.
 */
package com.sm.jooq.tables.records;


import com.sm.jooq.tables.Products;
import com.sm.jooq.tables.interfaces.IProducts;

import java.math.BigDecimal;

import org.jooq.Field;
import org.jooq.Record1;
import org.jooq.Record4;
import org.jooq.Row4;
import org.jooq.impl.UpdatableRecordImpl;


/**
 * This class is generated by jOOQ.
 */
@SuppressWarnings({ "all", "unchecked", "rawtypes" })
public class ProductsRecord extends UpdatableRecordImpl<ProductsRecord> implements Record4<Long, String, String, BigDecimal>, IProducts {

    private static final long serialVersionUID = 1L;

    /**
     * Setter for <code>product_management.products.id</code>.
     */
    @Override
    public void setId(Long value) {
        set(0, value);
    }

    /**
     * Getter for <code>product_management.products.id</code>.
     */
    @Override
    public Long getId() {
        return (Long) get(0);
    }

    /**
     * Setter for <code>product_management.products.description</code>.
     */
    @Override
    public void setDescription(String value) {
        set(1, value);
    }

    /**
     * Getter for <code>product_management.products.description</code>.
     */
    @Override
    public String getDescription() {
        return (String) get(1);
    }

    /**
     * Setter for <code>product_management.products.name</code>.
     */
    @Override
    public void setName(String value) {
        set(2, value);
    }

    /**
     * Getter for <code>product_management.products.name</code>.
     */
    @Override
    public String getName() {
        return (String) get(2);
    }

    /**
     * Setter for <code>product_management.products.price</code>.
     */
    @Override
    public void setPrice(BigDecimal value) {
        set(3, value);
    }

    /**
     * Getter for <code>product_management.products.price</code>.
     */
    @Override
    public BigDecimal getPrice() {
        return (BigDecimal) get(3);
    }

    // -------------------------------------------------------------------------
    // Primary key information
    // -------------------------------------------------------------------------

    @Override
    public Record1<Long> key() {
        return (Record1) super.key();
    }

    // -------------------------------------------------------------------------
    // Record4 type implementation
    // -------------------------------------------------------------------------

    @Override
    public Row4<Long, String, String, BigDecimal> fieldsRow() {
        return (Row4) super.fieldsRow();
    }

    @Override
    public Row4<Long, String, String, BigDecimal> valuesRow() {
        return (Row4) super.valuesRow();
    }

    @Override
    public Field<Long> field1() {
        return Products.PRODUCTS.ID;
    }

    @Override
    public Field<String> field2() {
        return Products.PRODUCTS.DESCRIPTION;
    }

    @Override
    public Field<String> field3() {
        return Products.PRODUCTS.NAME;
    }

    @Override
    public Field<BigDecimal> field4() {
        return Products.PRODUCTS.PRICE;
    }

    @Override
    public Long component1() {
        return getId();
    }

    @Override
    public String component2() {
        return getDescription();
    }

    @Override
    public String component3() {
        return getName();
    }

    @Override
    public BigDecimal component4() {
        return getPrice();
    }

    @Override
    public Long value1() {
        return getId();
    }

    @Override
    public String value2() {
        return getDescription();
    }

    @Override
    public String value3() {
        return getName();
    }

    @Override
    public BigDecimal value4() {
        return getPrice();
    }

    @Override
    public ProductsRecord value1(Long value) {
        setId(value);
        return this;
    }

    @Override
    public ProductsRecord value2(String value) {
        setDescription(value);
        return this;
    }

    @Override
    public ProductsRecord value3(String value) {
        setName(value);
        return this;
    }

    @Override
    public ProductsRecord value4(BigDecimal value) {
        setPrice(value);
        return this;
    }

    @Override
    public ProductsRecord values(Long value1, String value2, String value3, BigDecimal value4) {
        value1(value1);
        value2(value2);
        value3(value3);
        value4(value4);
        return this;
    }

    // -------------------------------------------------------------------------
    // FROM and INTO
    // -------------------------------------------------------------------------

    @Override
    public void from(IProducts from) {
        setId(from.getId());
        setDescription(from.getDescription());
        setName(from.getName());
        setPrice(from.getPrice());
    }

    @Override
    public <E extends IProducts> E into(E into) {
        into.from(this);
        return into;
    }

    // -------------------------------------------------------------------------
    // Constructors
    // -------------------------------------------------------------------------

    /**
     * Create a detached ProductsRecord
     */
    public ProductsRecord() {
        super(Products.PRODUCTS);
    }

    /**
     * Create a detached, initialised ProductsRecord
     */
    public ProductsRecord(Long id, String description, String name, BigDecimal price) {
        super(Products.PRODUCTS);

        setId(id);
        setDescription(description);
        setName(name);
        setPrice(price);
    }
}
